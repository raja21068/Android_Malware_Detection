import os
import MNN
import DNN
import gc
import time
"""
DNN.main( arffindex=0,
			datestr_p= "2017-08-12",
			learningRate_p= 0.01,
			dropRate_p= 0.2,
			AllTorOneF_p= True,
			L1_p= 0.0,
			L2_p= 0.0,
			datestr= "2017-08-12",
			learningRate= 0.01,
			dropRate= 0.2,
			AllTorOneF= True,
			L1= 0.0,
			L2= 0.0,
			initflag= True,
			LoadnEval= False,
			NoValids= True,
			NoCallBack= True,
			NoFreeze= True,
			noEpoch= 100 )
"""

score = MNN.main( arffindex=0,
				datestr_p= "2017-08-12",
				learningRate_p= 0.01,
				dropRate_p= 0.2,
				AllTorOneF_p= True,
				L1_p= 0.0,
				L2_p= 0.0,
				datestr= "2017-08-12",
				learningRate= 0.01,
				dropRate= 0.2,
				AllTorOneF= True,
				L1= 0.0,
				L2= 0.0,
				initflag= True,
				LoadnEval= False,
				NoValids= True,
				NoCallBack= True,
				NoFreeze= False,
				noEpoch= 100 )


"""
results = list()
for i in range(63):
	print(i)
	score = MNN.main( arffindex=i,
				datestr_p= "2017-08-12",
				learningRate_p= 0.01,
				dropRate_p= 0.2,
				AllTorOneF_p= True,
				L1_p= 0.0,
				L2_p= 0.0,
				datestr= "2017-08-12",
				learningRate= 0.01,
				dropRate= 0.2,
				AllTorOneF= True,
				L1= 0.0,
				L2= 0.0,
				initflag= False,
				LoadnEval= True,
				NoValids= True,
				NoCallBack= True,
				NoFreeze= True,
				noEpoch= 100 )
#	DNN.main( arffindex=i,
#				datestr_p= "2017-07-28",
#				learningRate_p= 0.01,
#				dropRate_p= 0.2,
#				AllTorOneF_p= True,
#				L1_p= 0.0,
#				L2_p= 0.0,
#				datestr= "2017-07-28",
#				learningRate= 0.01,
#				dropRate= 0.2,
#				AllTorOneF= True,
#				L1= 0.0,
#				L2= 0.0,
#				initflag= False,
#				LoadnEval= True,
#				NoValids= False,
#				NoCallBack= True,
#				NoFreeze= True,
#				noEpoch= 100 )
	results.append(score)
	gc.collect()
	time.sleep(20)


print(results)
f = open('genomeMNN.txt','a')
f.write(str(score))
f.close()

"""